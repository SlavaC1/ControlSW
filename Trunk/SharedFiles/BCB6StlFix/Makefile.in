# Makefile.in - Makefile.input file for stl.

# Source directory.

SRC_DIR	= @srcdir@

# Sources are actually located in various subdirectories

SRC_PATH = $(SRC_DIR)/src

# util-common directory, relative to source directory.

UC_DIR = @ucdir@

# util-common source directory

UC_SRC = $(SRC_DIR)/$(UC_DIR)

# Names of compiler and other tools.

ifeq "$(origin CC)" "default"
CC 	= @CC@
endif
LD	= $(CC)
AR 	= @AR@
RANLIB	= @RANLIB@
host_cpu= @host_cpu@


# Common compiler flags, BCC-specific flags, and GCC-specific flags.

CFLAGS = @CFLAGS@ $(EXTRA_CFLAGS)
BCC_CFLAGS = @BCC_CFLAGS@ $(EXTRA_BCC_CFLAGS)
GCC_CFLAGS = @GCC_CFLAGS@ $(EXTRA_GCC_CFLAGS)

# Flags for building dependencies with gcc

# DEP_CFLAGS = -MMD

# Determine whether we're using bcc.

CCBASE = $(basename $(notdir $(CC)))
ifeq ($(CCBASE), bcc)
  USING_BCC = yes
endif

# Define CFLAGS differently depending on which compiler we're using.

ifdef USING_BCC
  CFLAGS += $(BCC_CFLAGS)
else
  CFLAGS += $(GCC_CFLAGS)
endif

# The target we're building in this directory.

LIB_BASENAME = libborstl
LIB_PICNAME  = libborstl_pic

ifndef NAME
  NAME	= $(LIB_BASENAME)
endif

# Directories to add to include path

INC_DIRS = $(SRC_DIR)/stlport $(SRC_DIR)/../../include
ifdef USING_BCC
  INC_DIRS += $(SRC_DIR)/../../include/bcc /usr/include
endif

# Source files.

SRC_FILES = \
	c_locale_stub.cpp	\
	codecvt.cpp		\
	codecvt_byname.cpp	\
	codecvt_w.cpp		\
	collate.cpp		\
	collate_byname.cpp	\
	collate_byname_w.cpp	\
	collate_w.cpp		\
	complex.cpp		\
	complex_exp.cpp		\
	complex_io.cpp		\
	complex_io_w.cpp	\
	complex_trig.cpp	\
	ctype.cpp		\
	ctype_byname.cpp	\
	ctype_byname_w.cpp	\
	ctype_w.cpp		\
	dll_main.cpp		\
	fstream.cpp		\
	fstream_w.cpp		\
	ios.cpp			\
	ios_base.cpp		\
	ios_w.cpp		\
	iostream.cpp		\
	locale.cpp		\
	locale_catalog.cpp	\
	locale_impl.cpp		\
	message_facets.cpp	\
	message_facets_w.cpp	\
	monetary.cpp		\
	money_get.cpp		\
	money_get_w.cpp		\
	money_put.cpp		\
	money_put_w.cpp		\
	moneypunct.cpp		\
	moneypunct_byname.cpp	\
	moneypunct_byname_w.cpp	\
	moneypunct_w.cpp	\
	num_get.cpp		\
	num_get_float.cpp	\
	num_get_inst.cpp	\
	num_get_inst_w.cpp	\
	num_put.cpp		\
	num_put_float.cpp	\
	num_put_inst.cpp	\
	num_put_inst_w.cpp	\
	numpunct.cpp		\
	numpunct_byname.cpp	\
	numpunct_w.cpp		\
	range_errors.cpp	\
	sstream.cpp		\
	stdio_streambuf.cpp	\
	streambuf.cpp		\
	string.cpp		\
	string_w.cpp		\
	strstream.cpp		\
	test.cpp		\
	time_facets.cpp		\
	time_get.cpp		\
	time_get_w.cpp		\
	time_put.cpp		\
	time_put_w.cpp

# Object subdirectory for non-PIC objects

ifndef OBJDIR
  OBJDIR = obj
endif

# Include common rules for compiling stuff.

include $(UC_SRC)/Makefile.rules

# By default, built only the non-PIC library.

ifeq ($(host_cpu), ia64)
all:
	@echo "currently, nothing to do for all in STLport for ia64 builds"
else
all: library
endif

# Build the pic library.

ifneq ($(NAME),$(LIB_PICNAME))
.PHONY: $(LIB_PICNAME)$(AREXT)
$(LIB_PICNAME)$(AREXT):
	make OBJDIR=obj-pic NAME=$(LIB_PICNAME) EXTRA_CFLAGS=-fPIC library
endif

# Do clean two different ways to get rid of objects created by
# the two targets.

clean:
	make OBJDIR=obj do_clean
	make OBJDIR=obj-pic NAME=$(LIB_PICNAME) do_clean
